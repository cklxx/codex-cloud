name: ci

on:
  pull_request: {}
  push: { branches: [main] }

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Ensure root README.md contains only ASCII and certain Unicode code points
        run: ./scripts/asciicheck.py README.md
      - name: Check root README ToC
        run: python3 scripts/readme_toc.py README.md

      - name: Ensure codex-cli/README.md contains only ASCII and certain Unicode code points
        run: ./scripts/asciicheck.py codex-cli/README.md
      - name: Check codex-cli/README ToC
        run: python3 scripts/readme_toc.py codex-cli/README.md

      - name: Prettier (run `pnpm run format:fix` to fix)
        run: pnpm run format

  cli-contract:
    needs: build-test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Start Codex Cloud API
        run: |
          docker compose -f cloud/docker-compose.yml up -d api

      - name: Wait for API health endpoint
        run: |
          for i in {1..60}; do
            if curl -sSf http://127.0.0.1:8000/health >/dev/null; then
              exit 0
            fi
            sleep 2
          done
          echo "API did not become healthy in time" >&2
          docker compose -f cloud/docker-compose.yml logs api || true
          exit 1

      - name: Run CLI contract test suite
        env:
          API_BASE: http://127.0.0.1:8000
          CODEX_BASE: http://127.0.0.1:8000/api/codex
          ARTIFACT_DIR: ${{ runner.temp }}/cli-contract
        run: cloud/scripts/cli-contract.sh

      - name: Upload CLI contract artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cli-contract-artifacts
          path: ${{ runner.temp }}/cli-contract
          if-no-files-found: warn

      - name: Collect API logs on failure
        if: failure()
        run: docker compose -f cloud/docker-compose.yml logs api

      - name: Tear down Compose stack
        if: always()
        run: docker compose -f cloud/docker-compose.yml down
